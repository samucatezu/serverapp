{"version":3,"sources":["./src/app/service/notification.service.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/enum/data-state.enum.ts","./src/app/app.module.ts","./src/app/enum/status.enum.ts","./src/app/notification.module.ts","./src/app/service/server.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { NotifierService } from 'angular-notifier';\n\n@Injectable({ providedIn: 'root' })\nexport class NotificationService {\n  private readonly notifier: NotifierService;\n\n  constructor(notifierService: NotifierService) {\n    this.notifier = notifierService;\n  }\n\n  onDefault(message: string): void {\n    this.notifier.notify(Type.DEFAULT, message);\n  }\n\n  onSuccess(message: string): void {\n    this.notifier.notify(Type.SUCCESS, message);\n  }\n\n  onInfo(message: string): void {\n    this.notifier.notify(Type.INFO, message);\n  }\n\n  onWarning(message: string): void {\n    this.notifier.notify(Type.WARNING, message);\n  }\n\n  onError(message: string): void {\n    this.notifier.notify(Type.ERROR, message);\n  }\n}\n\nenum Type { \n  DEFAULT = 'default', \n  INFO = 'info', \n  SUCCESS = 'success', \n  WARNING = 'warning', \n  ERROR = 'error'\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { catchError, map, startWith } from 'rxjs/operators';\nimport { DataState } from './enum/data-state.enum';\nimport { Status } from './enum/status.enum';\nimport { AppState } from './interface/app-state';\nimport { CustomResponse } from './interface/custom-response';\nimport { Server } from './interface/server';\nimport { NotificationService } from './service/notification.service';\nimport { ServerService } from './service/server.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnInit {\n  appState$: Observable<AppState<CustomResponse>>;\n  readonly DataState = DataState;\n  readonly Status = Status;\n  private filterSubject = new BehaviorSubject<string>('');\n  private dataSubject = new BehaviorSubject<CustomResponse>(null);\n  filterStatus$ = this.filterSubject.asObservable();\n  private isLoading = new BehaviorSubject<boolean>(false);\n  isLoading$ = this.isLoading.asObservable();\n\n\n  constructor(private serverService: ServerService, private notifier: NotificationService) { }\n\n  ngOnInit(): void {\n    this.appState$ = this.serverService.servers$\n      .pipe(\n        map(response => {\n          this.notifier.onDefault(response.message);\n          this.dataSubject.next(response);\n          return { dataState: DataState.LOADED_STATE, appData: { ...response, data: { servers: response.data.servers.reverse() } } }\n        }),\n        startWith({ dataState: DataState.LOADING_STATE }),\n        catchError((error: string) => {\n          this.notifier.onError(error);\n          return of({ dataState: DataState.ERROR_STATE, error });\n        })\n      );\n  }\n\n  pingServer(ipAddress: string): void {\n    this.filterSubject.next(ipAddress);\n    this.appState$ = this.serverService.ping$(ipAddress)\n      .pipe(\n        map(response => {\n          const index = this.dataSubject.value.data.servers.findIndex(server =>  server.id === response.data.server.id);\n          this.dataSubject.value.data.servers[index] = response.data.server;\n          this.notifier.onDefault(response.message);\n          this.filterSubject.next('');\n          return { dataState: DataState.LOADED_STATE, appData: this.dataSubject.value }\n        }),\n        startWith({ dataState: DataState.LOADED_STATE, appData: this.dataSubject.value }),\n        catchError((error: string) => {\n          this.filterSubject.next('');\n          this.notifier.onError(error);\n          return of({ dataState: DataState.ERROR_STATE, error });\n        })\n      );\n  }\n\n  saveServer(serverForm: NgForm): void {\n    this.isLoading.next(true);\n    this.appState$ = this.serverService.save$(serverForm.value as Server)\n      .pipe(\n        map(response => {\n          this.dataSubject.next(\n            {...response, data: { servers: [response.data.server, ...this.dataSubject.value.data.servers] } }\n          );\n          this.notifier.onDefault(response.message);\n          document.getElementById('closeModal').click();\n          this.isLoading.next(false);\n          serverForm.resetForm({ status: this.Status.SERVER_DOWN });\n          return { dataState: DataState.LOADED_STATE, appData: this.dataSubject.value }\n        }),\n        startWith({ dataState: DataState.LOADED_STATE, appData: this.dataSubject.value }),\n        catchError((error: string) => {\n          this.isLoading.next(false);\n          this.notifier.onError(error);\n          return of({ dataState: DataState.ERROR_STATE, error });\n        })\n      );\n}\n\n  filterServers(status: Status): void {\n    this.appState$ = this.serverService.filter$(status, this.dataSubject.value)\n      .pipe(\n        map(response => {\n          this.notifier.onDefault(response.message);\n          return { dataState: DataState.LOADED_STATE, appData: response };\n        }),\n        startWith({ dataState: DataState.LOADED_STATE, appData: this.dataSubject.value }),\n        catchError((error: string) => {\n          this.notifier.onError(error);\n          return of({ dataState: DataState.ERROR_STATE, error });\n        })\n      );\n  }\n\n  deleteServer(server: Server): void {\n    this.appState$ = this.serverService.delete$(server.id)\n      .pipe(\n        map(response => {\n          this.dataSubject.next(\n            { ...response, data: \n              { servers: this.dataSubject.value.data.servers.filter(s => s.id !== server.id)} }\n          );\n          this.notifier.onDefault(response.message);\n          return { dataState: DataState.LOADED_STATE, appData: this.dataSubject.value }\n        }),\n        startWith({ dataState: DataState.LOADED_STATE, appData: this.dataSubject.value }),\n        catchError((error: string) => {\n          this.notifier.onError(error);\n          return of({ dataState: DataState.ERROR_STATE, error });\n        })\n      );\n  }\n\n  printReport(): void {\n    this.notifier.onDefault('Report downloaded');\n    // window.print();\n    let dataType = 'application/vnd.ms-excel.sheet.macroEnabled.12';\n    let tableSelect = document.getElementById('servers');\n    let tableHtml = tableSelect.outerHTML.replace(/ /g, '%20');\n    let downloadLink = document.createElement('a');\n    document.body.appendChild(downloadLink);\n    downloadLink.href = 'data:' + dataType + ', ' + tableHtml;\n    downloadLink.download = 'server-report.xls';\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  }\n}\n","<!-- <div> {{appState$ | async |json</div> -->\n\n  <div class=\"container-xl\">\n    <div class=\"table-responsive\">\n        <div class=\"table-wrapper\">\n            <div class=\"table-title\">\n                <div class=\"row\">\n                    <div class=\"col-sm-6\">\n                        <h2>Manage Servers</h2>\n                    </div>\n                    <div class=\"col-sm-6\">\n                        <button (click)=\"printReport()\" type=\"button\" class=\"btn btn-primary\">Print Report</button>\n  \n                        <a href=\"#addEmployeeModal\" class=\"btn btn-success\" data-toggle=\"modal\">\n                            <i class=\"material-icons\">&#xE147;</i>\n                            <span>New Server</span>\n                        </a>\n  \n                        <span>\n                            <select (ngModelChange)=\"filterServers($event)\" name=\"status\" ngModel=\"ALL\"  \n                                class=\"btn btn-info\" style=\"height: 32.91px;\">\n                                <option value=\"ALL\">ALL</option>\n                                <option value=\"SERVER_UP\">SERVER UP</option>\n                                <option value=\"SERVER_DOWN\">SERVER DOWN</option>\n                            </select>\n                        </span>\n                    </div>\n                </div>\n            </div> <br>\n            <ng-container *ngIf=\"(appState$ | async) as appState\" [ngSwitch]=\"appState.dataState\">\n                <ng-container *ngSwitchCase=\"DataState.LOADING_STATE\">\n                    <div class=\"col-md-12 single-note-item text-center\">\n                        <div class=\"spinner-border text-info\" role=\"status\"></div>\n                    </div>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"DataState.LOADED_STATE\">\n                    <table class=\"table table-striped table-hover\" id=\"servers\">\n                        <thead>\n                            <tr>\n                                <th>Image</th>\n                                <th>IP Address</th>\n                                <th>Name</th>\n                                <th>Memory</th>\n                                <th>Type</th>\n                                <th>Status</th>\n                                <th>Ping</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody *ngFor=\"let server of appState.appData.data.servers; let i = index\" >\n                            <tr>\n                                <td> <img [src]=\"server.imageUrl\" [alt]=\"server.name\" width=\"40\" height=\"40\"></td>\n                                <td>{{ server.ipAddress }}</td>\n                                <td>{{ server.name }}</td>\n                                <td>{{ server.memory }}</td>\n                                <td>{{ server.type }}</td>\n                                <td>\n                                    <span class=\"badge\" \n                                    [ngClass]=\"[server.status === Status.SERVER_UP ? ' badge-success' : ' badge-danger']\">\n                                      {{ server.status === Status.SERVER_UP ? 'SERVER UP' : 'SERVER DOWN' }}\n                                    </span>\n                                </td>\n                                <td>\n                                    <a (click)=\"pingServer(server.ipAddress)\" style=\"cursor: pointer;\">\n                                        <i *ngIf=\"(filterStatus$ | async) === '' || (filterStatus$ | async) !== server.ipAddress\"\n                                            class=\"material-icons\" title=\"Ping server\">&#xe328;</i>\n                                        <i *ngIf=\"(filterStatus$ | async) === server.ipAddress\"\n                                            class=\"fa fa-spinner fa-spin\" style=\"font-size:24px\"></i>\n                                    </a>\n                                </td>\n                                <td>\n                                    <a (click)=\"deleteServer(server)\" class=\"delete\" data-toggle=\"modal\"\n                                        style=\"cursor: pointer;\"><i class=\"material-icons\" data-toggle=\"tooltip\"\n                                            title=\"Delete\">&#xE872;</i></a>\n                                </td>\n                        </tbody>\n                    </table>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"DataState.ERROR_STATE\">\n                    <div class=\"alert-danger\">\n                        {{ appState.error }}\n                    </div>\n                </ng-container>\n            </ng-container>\n        </div>\n    </div>\n  </div>\n  \n  <!-- Add server Modal HTML -->\n  <div id=\"addEmployeeModal\" class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <form #serverForm=\"ngForm\" (ngSubmit)=\"saveServer(serverForm)\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Add Server</h4>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"form-group\">\n                        <label>IP</label>\n                        <input type=\"text\" ngModel name=\"ipAddress\" class=\"form-control\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Name</label>\n                        <input type=\"text\" ngModel name=\"name\" class=\"form-control\" required>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\">\n                            <div class=\"form-group\">\n                                <label>Memory</label>\n                                <input type=\"text\" ngModel name=\"memory\" class=\"form-control\" required>\n                            </div>\n                        </div>\n                        <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\">\n                            <div class=\"form-group\">\n                                <label>Type</label>\n                                <input type=\"text\" ngModel name=\"type\" class=\"form-control\" required>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Status</label>\n                        <select name=\"status\" ngModel=\"SERVER_DOWN\" class=\"form-control\" name=\"status\" required>\n                            <option value=\"SERVER_UP\">SERVER UP</option>\n                            <option value=\"SERVER_DOWN\">SERVER DOWN</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-warning\" id=\"closeModal\" data-dismiss=\"modal\">\n                        Cancel\n                    </button>\n                    <button type=\"submit\" [disabled]=\"serverForm.invalid || (isLoading$ | async)\"\n                        class=\"btn btn-success\">\n                        <i *ngIf=\"isLoading$ | async\" class=\"fas fa-spinner fa-spin\"></i>\n                        <span *ngIf=\"isLoading$ | async\">Saving...</span>\n                        <span *ngIf=\"!(isLoading$ | async)\">Add</span>\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n  </div>\n  <notifier-container></notifier-container>","export enum DataState {\n    LOADING_STATE = 'LOADING_STATE', LOADED_STATE = 'LOADED_STATE', ERROR_STATE = 'ERROR_STATE'\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { NotificationModule } from './notification.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    NotificationModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export enum Status {\n    ALL = 'ALL', SERVER_UP = 'SERVER_UP', SERVER_DOWN = 'SERVER_DOWN'\n}","import { NgModule } from '@angular/core';\nimport { NotifierModule, NotifierOptions } from 'angular-notifier';\n\nconst customNotifierOptions: NotifierOptions = {\n  position: {\n      horizontal: {\n          position: 'left',\n          distance: 150\n      },\n      vertical: {\n          position: 'bottom',\n          distance: 12,\n          gap: 10\n      }\n  },\n  theme: 'material',\n  behaviour: {\n      autoHide: 5000,\n      onClick: 'hide',\n      onMouseover: 'pauseAutoHide',\n      showDismissButton: true,\n      stacking: 4\n  },\n  animations: {\n      enabled: true,\n      show: {\n          preset: 'slide',\n          speed: 300,\n          easing: 'ease'\n      },\n      hide: {\n          preset: 'fade',\n          speed: 300,\n          easing: 'ease',\n          offset: 50\n      },\n      shift: {\n          speed: 300,\n          easing: 'ease'\n      },\n      overlap: 150\n  }\n};\n\n@NgModule({\n  imports: [ NotifierModule.withConfig(customNotifierOptions) ],\n  exports: [ NotifierModule ]\n})\nexport class NotificationModule {}\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport { Status } from '../enum/status.enum';\nimport { CustomResponse } from '../interface/custom-response';\nimport { Server } from '../interface/server';\n\n@Injectable({ providedIn: 'root' })\nexport class ServerService {\n  // private readonly apiUrl = 'https://server-manager-samucatezu.herokuapp.com';\n  // private readonly apiUrl = 'http://localhost:8080';\n  private readonly apiUrl = 'http://servermanagerbackend-env-1.eba-uu28akxc.us-east-1.elasticbeanstalk.com/';\n  \n\n\n  constructor(private http: HttpClient) { }\n\n  servers$ = <Observable<CustomResponse>>\n    this.http.get<CustomResponse>(`${this.apiUrl}/server/list`)\n      .pipe(\n        tap(console.log),\n        catchError(this.handleError)\n      );\n\n  save$ = (server: Server) => <Observable<CustomResponse>>\n    this.http.post<CustomResponse>(`${this.apiUrl}/server/save`, server)\n      .pipe(\n        tap(console.log),\n        catchError(this.handleError)\n      );\n\n  ping$ = (ipAddress: string) => <Observable<CustomResponse>>\n    this.http.get<CustomResponse>(`${this.apiUrl}/server/ping/${ipAddress}`)\n      .pipe(\n        tap(console.log),\n        catchError(this.handleError)\n      );\n\n  filter$ = (status: Status, response: CustomResponse) => <Observable<CustomResponse>>\n    new Observable<CustomResponse>(\n      suscriber => {\n        console.log(response);\n        suscriber.next(\n          status === Status.ALL ? { ...response, message: `Servers filtered by ${status} status` } :\n            {\n              ...response,\n              message: response.data.servers\n                .filter(server => server.status === status).length > 0 ? `Servers filtered by \n          ${status === Status.SERVER_UP ? 'SERVER UP'\n                : 'SERVER DOWN'} status` : `No servers of ${status} found`,\n              data: {\n                servers: response.data.servers\n                  .filter(server => server.status === status)\n              }\n            }\n        );\n        suscriber.complete();\n      }\n    )\n      .pipe(\n        tap(console.log),\n        catchError(this.handleError)\n      );\n\n  delete$ = (serverId: number) => <Observable<CustomResponse>>\n    this.http.delete<CustomResponse>(`${this.apiUrl}/server/delete/${serverId}`)\n      .pipe(\n        tap(console.log),\n        catchError(this.handleError)\n      );\n\n\n  private handleError(error: HttpErrorResponse): Observable<never> {\n    console.log(error);\n    return throwError(`An error occurred - Error code: ${error.status}`);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}